
package services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import repositories.PhaseRepository;
import security.Authority;
import security.LoginService;
import security.UserAccount;
import domain.HandyWorker;
import domain.Phase;

@Service
@Transactional
public class PhaseService {

	//Repository
	@Autowired
	public PhaseRepository		phaseRepository;

	//Services
	@Autowired
	public HandyWorkerService	handyWorkerService;


	//Constructor
	public PhaseService() {
		super();
	}

	//Simple CRUD methods
	//11.4
	public Phase create() {
		//Logged user must be a handyWorker
		final Authority a = new Authority();
		final UserAccount user = LoginService.getPrincipal();
		a.setAuthority(Authority.HANDYWORKER);
		Assert.isTrue(user.getAuthorities().contains(a));

		final Phase res = new Phase();
		//TODO: Revisar create
		return res;
	}

	public Collection<Phase> findByHandyWorker() {
		//Logged user must be a handyWorker
		final Authority a = new Authority();
		final UserAccount user = LoginService.getPrincipal();
		a.setAuthority(Authority.HANDYWORKER);
		Assert.isTrue(user.getAuthorities().contains(a));

		final HandyWorker handyWorker;
		handyWorker = this.handyWorkerService.findByPrincipal();
		Assert.notNull(handyWorker);
		Assert.notNull(handyWorker.getId());

		res = this.phaseRepository.findByCustomerId(handyWorker.getId());
		return res;
	}
}
