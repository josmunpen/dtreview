
package services;

import java.util.ArrayList;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.Assert;

import repositories.SocialProfileRepository;
import security.Authority;
import security.LoginService;
import security.UserAccount;
import domain.SocialProfile;

public class SocialProfileService {

	@Autowired
	public SocialProfileRepository	socialProfileRepository;


	//12.3
	public SocialProfile create() {

		final SocialProfile result = new SocialProfile();

		result.setLink("");
		result.setNick("");
		result.setSocialNetwork("");

		return result;
	}
	public SocialProfile save(final SocialProfile category) {
		//Logged user must be an administrator
		final Authority a = new Authority();
		final UserAccount user = LoginService.getPrincipal();
		a.setAuthority(Authority.ADMIN);
		Assert.isTrue(user.getAuthorities().contains(a));

		Assert.notNull(category);

		SocialProfile res;
		res = this.categoryRepository.save(category);
		return res;
	}

	public void delete(final SocialProfile category) {
		//Logged user must be an administrator
		final Authority a = new Authority();
		final UserAccount user = LoginService.getPrincipal();
		a.setAuthority(Authority.ADMIN);
		Assert.isTrue(user.getAuthorities().contains(a));

		Assert.notNull(category);
		Assert.isTrue(category.getId() != 0);
		Assert.isTrue(category.getName() != "CATEGORY");
		Assert.isTrue(!category.getName().equals("CATEGORY"));

		Collection<SocialProfile> categories = new ArrayList<SocialProfile>();
		categories = this.findAll();
		for (final SocialProfile c : categories)
			if (c.getParentSocialProfile().equals(category))
				this.delete(c);

		this.categoryRepository.delete(category);

	}
	public Collection<SocialProfile> findAll() {
		return this.categoryRepository.findAll();
	}

	public SocialProfile findOne(final int categoryId) {
		return this.categoryRepository.findOne(categoryId);
	}
}
